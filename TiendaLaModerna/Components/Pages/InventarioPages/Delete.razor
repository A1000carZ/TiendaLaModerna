@page "/inventario/delete"
@using Microsoft.EntityFrameworkCore
@using TiendaLaModerna.Components.Models.Inventario
@inject IDbContextFactory<TiendaLaModerna.Data.TiendaLaModernaContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>MovimientoInventario</h2>
    <hr />
    @if (movimientoinventario is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">ProductoId</dt>
            <dd class="col-sm-10">@movimientoinventario.ProductoId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LoteId</dt>
            <dd class="col-sm-10">@movimientoinventario.LoteId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TipoMovimiento</dt>
            <dd class="col-sm-10">@movimientoinventario.TipoMovimiento</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Cantidad</dt>
            <dd class="col-sm-10">@movimientoinventario.Cantidad</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TipoReferencia</dt>
            <dd class="col-sm-10">@movimientoinventario.TipoReferencia</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Referencia</dt>
            <dd class="col-sm-10">@movimientoinventario.Referencia</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Notas</dt>
            <dd class="col-sm-10">@movimientoinventario.Notas</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">FechaMovimiento</dt>
            <dd class="col-sm-10">@movimientoinventario.FechaMovimiento</dd>
        </dl>
        <EditForm method="post" Model="movimientoinventario" OnValidSubmit="DeleteMovimientoInventario" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(movimientoinventario is null)">Delete</button> |
            <a href="/movimientoinventarios">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private MovimientoInventario? movimientoinventario;

    [SupplyParameterFromQuery]
    private int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        movimientoinventario = await context.MovimientoInventario.FirstOrDefaultAsync(m => m.Id == Id);

        if (movimientoinventario is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteMovimientoInventario()
    {
        using var context = DbFactory.CreateDbContext();
        context.MovimientoInventario.Remove(movimientoinventario!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/movimientoinventarios");
    }
}
