@page "/venta/details"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using TiendaLaModerna.Components.Models.Venta
@inject IDbContextFactory<TiendaLaModerna.Data.TiendaLaModernaContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Detalles de Venta</PageTitle>

<div class="min-h-screen bg-gray-50 p-4">
    @if (venta is null)
    {
        <div class="flex items-center justify-center min-h-64">
            <div class="text-center">
                <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
                <p class="text-gray-600">Loading...</p>
            </div>
        </div>
    }
    else
    {
        <div class="max-w-4xl mx-auto">
           
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
                <div class="flex items-center justify-between mb-4">
                    <div>
                        <h1 class="text-2xl font-semibold text-gray-900">Venta #@venta.NumeroOrden</h1>
                        <p class="text-sm text-gray-500">@venta.FechaVenta.ToString("MMMM d, yyyy 'at' h:mm tt")</p>
                    </div>
                    <div class="flex items-center space-x-2">
                        <TiendaLaModerna.Components.Layout.StatusChip Status="@venta.EstatusVenta" Type="pago" />
                        <TiendaLaModerna.Components.Layout.StatusChip Status="@venta.EstatusEntrega" Type="entrega" />
                        
                    </div>
                </div>

                <div class="flex space-x-4">
                    <a href="@($"/venta/edit?id={venta.Id}")"
                       class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Editar
                    </a>
                    <a href="/venta"
                       class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-900">
                        ← Regresar a ventas
                    </a>
                </div>
            </div>

            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
               
                <div class="lg:col-span-2">
                    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                        <h2 class="text-lg font-medium text-gray-900 mb-4">Resumen venta</h2>

                        <div class="space-y-4">
                            <div class="flex justify-between">
                                <span class="text-gray-600">Subtotal</span>
                                <span class="font-medium">$@((venta.MontoTotal).ToString("N2"))</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600">Descuento</span>
                                <span class="font-medium">$@((venta.MontoDescuento ).ToString("N2"))</span>
                            </div>
                            <div class="border-t pt-4">
                                <div class="flex justify-between">
                                    <span class="text-lg font-medium text-gray-900">Total</span>
                                    <span class="text-lg font-medium text-gray-900">$@venta.MontoTotal.ToString("N2")</span>
                                </div>
                            </div>
                        </div>

                        <div class="mt-6 pt-6 border-t">
                            <h3 class="text-sm font-medium text-gray-900 mb-3">Metodo de Pago</h3>
                            <p class="text-sm text-gray-600">@venta.MetodoPago</p>
                        </div>

                        @if (!string.IsNullOrEmpty(venta.Notas))
                        {
                            <div class="mt-6 pt-6 border-t">
                                <h3 class="text-sm font-medium text-gray-900 mb-3">Notes</h3>
                                <p class="text-sm text-gray-600">@venta.Notas</p>
                            </div>
                        }
                    </div>
                </div>

                
                <div class="space-y-6">
                    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                        <h2 class="text-lg font-medium text-gray-900 mb-4">Información del Cliente</h2>
                        <div class="space-y-3">
                            <div>
                                <p class="text-sm font-medium text-gray-900">Cliente</p>
                                <p class="text-sm text-gray-600">@venta.Cliente.Nombre @venta.Cliente.Apellido</p>
                                <p class="text-sm text-gray-600">@venta.Cliente.Telefono</p>
                                <p class="text-sm text-gray-600">@venta.Cliente.Email</p>
                            </div>
                        </div>
                    </div>

                
                    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                        <h2 class="text-lg font-medium text-gray-900 mb-4">Informacion de Entrega</h2>
                        <div class="space-y-3">
                            <div>
                                <p class="text-sm font-medium text-gray-900">Estatus Entrega</p>
                                <p class="text-sm text-gray-600">@venta.EstatusEntrega</p>
                            </div>
                            
                                <div>
                                    <p class="text-sm font-medium text-gray-900">Fecha</p>
                                    <p class="text-sm text-gray-600">@venta.FechaEntrega.ToString("MMMM d, yyyy")</p>
                                </div>
                            
                            @if (!string.IsNullOrEmpty(venta.EntregadoPor))
                            {
                                <div>
                                    <p class="text-sm font-medium text-gray-900">Entregado por</p>
                                    <p class="text-sm text-gray-600">@venta.EntregadoPor</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>


            @if (venta.Items != null && venta.Items.Any())
            {
                <div class="mt-6 bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                    <h2 class="text-lg font-medium text-gray-900 mb-4">Detalles Venta</h2>
                    <div class="space-y-4">
                        @foreach (var item in venta.Items)
                        {
                            <div class="border border-gray-200 rounded-lg">
                               
                                <div class="flex items-center justify-between py-3 px-4">
                                    <div class="flex-1">
                                        <TiendaLaModerna.Components.Layout.StatusChip Status="@item.EstatusEntrega" Type="entrega" />
                                        <h3 class="text-sm font-medium text-gray-900">@item.Producto.Name</h3>
                                        <p class="text-sm text-gray-500">Cantidad Entregada @item.CantidadEntregada / @item.CantidadSolicitada</p>
                                    </div>
                                    <div class="text-right">
                                        <p class="text-sm font-medium text-gray-900">$@item.PrecioUnitario.ToString("N2") Precio unitario</p>
                                        <p class="text-sm text-gray-500">$@((item.TotalLinea).ToString("N2")) total</p>
                                    </div>
                                    <div class="ml-4 flex items-center space-x-2">
                                        @if (item.EstatusEntrega != "COMPLETA")
                                        {
                                            <button @onclick="() => OpenDialog(item)"
                                                    class="px-3 py-1 text-xs font-medium text-blue-600 bg-blue-50 rounded-md hover:bg-blue-100">
                                                Agregar entrega
                                            </button>
                                        }
                                        @if (item.Entregas != null && item.Entregas.Any())
                                        {
                                            <button @onclick="() => ToggleEntregas(item.Id)"
                                                    class="px-3 py-1 text-xs font-medium text-gray-600 bg-gray-50 rounded-md hover:bg-gray-100">
                                                @(expandedItems.Contains(item.Id) ? "Ocultar" : "Ver") entregas (@item.Entregas.Count())
                                            </button>
                                        }
                                    </div>
                                </div>

                               
                                @if (expandedItems.Contains(item.Id) && item.Entregas != null && item.Entregas.Any())
                                {
                                    <div class="border-t border-gray-200 bg-gray-50 px-4 py-3">
                                        <h4 class="text-sm font-medium text-gray-700 mb-2">Entregas:</h4>
                                        <div class="space-y-2">
                                            @foreach (var entrega in item.Entregas.OrderByDescending(e => e.FechaEntrega))
                                            {
                                                <div class="bg-white rounded p-3 text-sm">
                                                    <div class="flex justify-between items-start">
                                                        <div>
                                                            <p><strong>Cantidad:</strong> @entrega.CantidadEntregada</p>
                                                            <p><strong>Fuente:</strong> @entrega.FuenteEntrega</p>
                                                            @if (!string.IsNullOrEmpty(entrega.EntregadoPor))
                                                            {
                                                                <p><strong>Entregado por:</strong> @entrega.EntregadoPor</p>
                                                            }
                                                            @if (!string.IsNullOrEmpty(entrega.Notas))
                                                            {
                                                                <p><strong>Notas:</strong> @entrega.Notas</p>
                                                            }
                                                        </div>
                                                        <div class="text-right text-xs text-gray-500">
                                                            @entrega.FechaEntrega.ToString("MMM d, yyyy h:mm tt")
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            }
            @if (showDialog)
            {
                <div class="fixed inset-0 bg-gray-600  overflow-y-auto h-full w-full z-50">
                    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
                        <div class="mt-3">
                            <h3 class="text-lg font-medium text-gray-900 mb-4">Agregar Entrega para @selectedDetalleVenta.Producto.Name</h3>

                            <div class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Cantidad a Entregar</label>
                                    <input @bind="nuevaEntrega.CantidadEntregada" type="number" min="1"
                                           class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" />
                                </div>

                                @if (selectedDetalleVenta.Producto.RequiereVencimiento)
                                {
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Selecciona un lote</label>
                                        <select @bind="nuevaEntrega.LoteId"
                                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                                            @foreach (var lote in selectedDetalleVenta.Producto.Lotes)
                                            {
                                                <option value="@lote.Id">@lote.NumeroLote - Vencimiento: @lote.FechaVencimiento.ToString("MMMM d, yyyy") - Disponibles @lote.CantidadRestante</option>
                                            }
                                        </select>
                                    </div>
                                }
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Entregado Por</label>
                                    <input @bind="nuevaEntrega.EntregadoPor" type="text"
                                           class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" />
                                </div>

                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Notas</label>
                                    <textarea @bind="nuevaEntrega.Notas" rows="3"
                                              class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"></textarea>
                                </div>
                            </div>

                            <div class="flex justify-end space-x-3 mt-6">
                                <button @onclick="CancelDialog" type="button"
                                        class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                                    Cancelar
                                </button>
                                <button @onclick="SaveEntrega" type="button"
                                        class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700">
                                    Guardar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private Venta? venta;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    
    private bool showDialog = false;
    private DetalleEntrega nuevaEntrega = new();
    private int selectedDetalleVentaId;
    private DetalleVenta? selectedDetalleVenta;

    private HashSet<int> expandedItems = new();

    private async Task OpenDialog(DetalleVenta detalleVenta)
    {
        selectedDetalleVentaId = detalleVenta.Id;
        selectedDetalleVenta = detalleVenta;
       

        // Load lotes for this specific product if needed
        if (detalleVenta.Producto.RequiereVencimiento)
        {
            using var context = DbFactory.CreateDbContext();
            var productWithLotes = await context.Producto
                .Include(p => p.Lotes.Where(l => l.CantidadRestante > 0))
                .FirstOrDefaultAsync(p => p.Id == detalleVenta.ProductoId);

            if (productWithLotes != null)
            {
                selectedDetalleVenta.Producto.Lotes = productWithLotes.Lotes;
            }
        }
        nuevaEntrega = new DetalleEntrega
        {
            DetalleVentaId = detalleVenta.Id,
            FechaEntrega = DateTime.Now,
            FuenteEntrega = selectedDetalleVenta.Producto.RequiereVencimiento ? "LOTE" : "PRODUCTO",
        };
        showDialog = true;
    }

    private void CancelDialog()
    {
        showDialog = false;
        nuevaEntrega = new();
    }

    private async Task SaveEntrega()
    {
        using var context = DbFactory.CreateDbContext();

        
        context.DetalleEntrega.Add(nuevaEntrega);

       
        var detalleVenta = await context.DetalleVenta.FindAsync(selectedDetalleVentaId);

        await context.SaveChangesAsync();

       
        await OnInitializedAsync();

       
        showDialog = false;
        nuevaEntrega = new();
    }

    private void ToggleEntregas(int itemId)
    {
        if (expandedItems.Contains(itemId))
        {
            expandedItems.Remove(itemId);
        }
        else
        {
            expandedItems.Add(itemId);
        }
    }
    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        venta = await context.Venta
            .Include(p => p.Cliente)
            .Include(p => p.Items)
                .ThenInclude(i => i.Producto)
            .Include(p => p.Items)
                .ThenInclude(i => i.Entregas)
            .FirstOrDefaultAsync(m => m.Id == Id);

        if (venta is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
    
}
