@page "/catalogocategorias/edit"
@using Microsoft.EntityFrameworkCore
@using TiendaLaModerna.Components.Models.Catalogo
@using TiendaLaModerna.Components.Repository
@inject CategoriaRepositorio Repo
@inject NavigationManager NavigationManager

<PageTitle>Edit</PageTitle>

<h1>Edit</h1>

<h2>CatalogoCategorias</h2>
<hr />

@if (CatalogoCategorias is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="CatalogoCategorias" OnValidSubmit="UpdateCatalogoCategorias" FormName="edit">
                <DataAnnotationsValidator />
                <ValidationSummary role="alert" class="text-danger" />
                <InputNumber type="hidden" @bind-Value="CatalogoCategorias.id" />

                <div class="mb-3">
                    <label for="nombre" class="form-label">nombre:</label>
                    <InputText id="nombre" @bind-Value="CatalogoCategorias.nombre" class="form-control" aria-required="true" />
                    <ValidationMessage For="() => CatalogoCategorias.nombre" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="img" class="form-label">img:</label>
                    <InputText id="img" @bind-Value="CatalogoCategorias.img" class="form-control" />
                    <ValidationMessage For="() => CatalogoCategorias.img" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="activo" class="form-label">activo:</label>
                    <InputCheckbox id="activo" @bind-Value="CatalogoCategorias.activo" class="form-check-input" />
                    <ValidationMessage For="() => CatalogoCategorias.activo" class="text-danger" />
                </div>

                <button type="submit" class="btn btn-primary">Save</button>
            </EditForm>
        </div>
        @if (redirect)
        {
            NavigationManager.NavigateTo("/catalogocategorias", forceLoad: true);
        }
    </div>
}

<div>
    <a href="/catalogocategorias">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private CatalogoCategorias? CatalogoCategorias { get; set; }

    [SupplyParameterFromQuery]
    private int id { get; set; }

    private bool redirect = false;

    protected override async Task OnInitializedAsync()
    {
        CatalogoCategorias ??= await Repo.ReadAsync(id);
        if (CatalogoCategorias == null)
        {
            NavigationManager.NavigateTo("/notfound");
        }
    }

    private async Task UpdateCatalogoCategorias()
    {
        try
        {
            if (CatalogoCategorias is null)
                return;

            Console.WriteLine($"Actualizando categoria con name: {CatalogoCategorias.nombre}");
            await Repo.UpdateAsync(CatalogoCategorias);

            redirect = true;
            StateHasChanged();
        }
        catch (DbUpdateConcurrencyException)
        {
            var exists = await Repo.ReadAsync(CatalogoCategorias!.id);
            if (exists == null)
            {
                NavigationManager.NavigateTo("/notfound");
            }
            else
            {
                throw;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating categoria: {ex}");
            // TODO: Show error message to user
        }
    }
}